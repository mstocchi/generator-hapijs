// This is a file generated by the yeoman generator hapijs

/**
 * Controller which handles requests/responses relating to <%= name %>
 *
 * @type {<%= name %>Dao|exports}
 */
'use strict';

const <%= daoName %> = require('./dao');
const Boom = require('boom');

/**
 * Creates a <%= name %>
 *
 * @param req
 * @param reply
 */
function create(req, reply) {

	<%= daoName %>.create(req.payload, function (err, data) {
		if (err) {
			return reply(Boom.wrap(err));
		}
		reply(data);
	});
};

/**
 * Gets all <%= pluralName %>
 *
 * @param req
 * @param reply
 */

function find(req, reply) {
  <%= daoName %>.findAll().then(data => {
      reply(data);
  }, function(err) {
      return reply(Boom.wrap(err));
  });
};

/**
 * Get a specific <%= name %> by id
 *
 * @param req
 * @param reply
 */
function findById(req, reply) {

	<%= daoName %>.findById(req.params.id, function (err, data) {
		if (err) {
			return reply(Boom.wrap(err));
		}
		reply(data);
	});
};

/**
 * Update a specific <%= name %> by id
 *
 * @param req
 * @param reply
 */
function update(req, reply) {

	<%= daoName %>.update(req.params.id, req.payload, function (err, data) {
		if (err) {
			return reply(Boom.wrap(err));
		}
		reply(data);
	});
};
		
/**
 * Remove a specific <%= name %> by id
 *
 * @param req
 * @param reply
 */
function remove(req, reply) {

	<%= daoName %>.remove(req.params.id, function (err, data) {
		if (err) {
			return reply(Boom.wrap(err));
		}
		reply(data);
	});
};

/* Add new methods above */
module.exports = {
  create:create,
  findById:findById,
  update:update,
  remove:remove,
  find: find
};